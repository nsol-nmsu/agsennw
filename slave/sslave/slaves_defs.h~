#ifndef _SLAVE_DEFS_C_
#define _SLAVE_DEFS_C_

#include "slave.h"
#include <stdlib.h>

#define INTERNAL_TEMP //Sensor type to use

#ifdef INTERNAL_TEMP
/**
A simple test sensor that utilizes the AVR's internal temperature sensor.
Read Channels: 1
Write Channesl: 0
**/
#include "analog.h"

void slave_init()
{
  analogEnableCustom(PS_64, ADCREF_INT );
}

long long slave_measure( unsigned ch )
{
        return 0;
};

char* slave_read( unsigned ch )
{
  double val = analogGet(ADC_TEMP) - 270;
  static char str[10];
  dtostrf( val, 10, 5, str );
  return str;
};

int slave_write( const char* msg, unsigned char )
{
        return 1;
}

int slave_apply( unsigned char )
{
        return 1;
};

Slave sslave =
{
  .id = 102,
  .type = 1,
  .name = "itemp",
  .m = 10, .d = 19, .y = 15,
  .rcount = 1,
  .wcount = 0,
  .info = "Internal AVR termperature";
};
#elif defined EXTERNAL_TEMP
/**
A simple sensor using an external analog temperature sensor connected to ADC_3
Read Channels: 1
Write Channesl: 0
**/
#include "analog.h"

void slave_init()
{
  analogEnableDefault();
}

long long slave_measure( unsigned ch )
{
        return 0;
};

char* slave_read( unsigned ch )
{
  double val = 50.0 + (getVoltage(ADC_3, 5.0) - 2.5) * 100.0;
  static char str[10];
  dtostrf( val, 10, 5, str );
  return str;
};

int slave_write( const char* msg, unsigned char )
{
        return 1;
}

int slave_apply( unsigned char )
{
        return 1;
};

Slave sslave =
{
  .id = 102,
  .type = 1,
  .name = "itemp",
  .m = 10, .d = 19, .y = 15,
  .rcount = 1,
  .wcount = 0,
  .info = "Internal AVR termperature";
};
#endif //EXTERNAL_TEMP


#endif //_SLAVE_DEFS_C_
